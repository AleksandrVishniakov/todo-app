(()=>{"use strict";const e=e=>{const n=document.createElement("div");return n.innerHTML=e,n.firstElementChild},n=(e,n)=>{const t=e.getElement();n.append(t)};class t{getTemplate(){return'<section class="board__container"></section>'}getElement(){return this.element||(this.element=e(this.getTemplate())),this.element}removeElement(){this.element=null}}class l{getTemplate(){return'<div class="board__tasks"></div>'}getElement(){return this.element||(this.element=e(this.getTemplate())),this.element}removeElement(){this.element.remove(),this.element=null}}class a{constructor(e){this.task=e}getTemplate(){return(e=>{const{color:n,description:t,dueDate:l}=e;return`<article class="card card--${n}">\n    <div class="card__form">\n      <div class="card__inner">\n        <div class="card__textarea-wrap">\n          <p class="card__text">${t}</p>\n        </div>\n        <div class="card__settings">\n          <div class="card__date-deadline">\n            <p class="card__input-deadline-wrap">\n              <span class="card__date">${l}</span>\n            </p>\n          </div>\n        </div>\n        <div class="card__control">\n        <button type="button" class="card__btn">\n          Редактировать\n        </button>\n      </div>\n      </div>\n    </div>\n  </article>`})(this.task)}getElement(){return this.element||(this.element=e(this.getTemplate())),this.element}removeElement(){this.element=null}}class s{getTemplate(){return((e={})=>{const{color:n="black",description:t="",dueDate:l=null}=e;return`<article class="card card--edit card--${n}">\n    <form class="card__form" method="get">\n      <div class="card__inner">\n        <div class="card__textarea-wrap">\n          <label>\n            <textarea\n              class="card__text"\n              placeholder="Текст вашей задачи пишите тут..."\n              name="text"\n            >${t}</textarea>\n          </label>\n        </div>\n        <div class="card__settings">\n          <div class="card__details">\n              <fieldset class="card__date-deadline">\n                <label class="card__input-deadline-wrap">\n                  <input\n                    class="card__date"\n                    type="date"\n                    placeholder=""\n                    name="date"\n                    value=${l}\n                  />\n                </label>\n              </fieldset>\n          <div class="card__colors-inner">\n            <h3 class="card__colors-title">Цвет</h3>\n            <div class="card__colors-wrap">\n              <div class="card__color">\n              <input\n                type="radio"\n                id="color-black-4"\n                class="card__color-input card__color-input--black visually-hidden"\n                name="color"\n                value="black"\n              />\n              <label\n                for="color-black-4"\n                class="card__color-value card__color-value--black"\n                >Черный\n              </label>\n              </div>\n              <div class="card__color">\n              <input\n                type="radio"\n                id="color-yellow-4"\n                class="card__color-input card__color-input--yellow visually-hidden"\n                name="color"\n                value="yellow"\n                checked\n              />\n              <label\n                for="color-yellow-4"\n                class="card__color-value card__color-value--yellow"\n                >Желтый</label\n              >\n              </div>\n              <div class="card__color">\n              <input\n                type="radio"\n                id="color-blue-4"\n                class="card__color-input card__color-input--blue visually-hidden"\n                name="color"\n                value="blue"\n              />\n              <label\n                for="color-blue-4"\n                class="card__color-value card__color-value--blue"\n                >Синий\n              </label>\n              </div>\n              <div class="card__color">\n              <input\n                type="radio"\n                id="color-green-4"\n                class="card__color-input card__color-input--green visually-hidden"\n                name="color"\n                value="green"\n              />\n              <label\n                for="color-green-4"\n                class="card__color-value card__color-value--green"\n                >Зеленый\n              </label>\n              </div>\n              <div class="card__color">\n              <input\n                type="radio"\n                id="color-pink-4"\n                class="card__color-input card__color-input--pink visually-hidden"\n                name="color"\n                value="pink"\n              />\n              <label\n                for="color-pink-4"\n                class="card__color-value card__color-value--pink"\n                >Розовый\n              </label>\n              <div>\n            </div>\n          </div>\n        </div>\n\n        <div class="card__status-btns">\n          <button class="card__save" type="submit">Сохранить</button>\n          <button class="card__delete" type="button">Удалить</button>\n        </div>\n      </div>\n    </form>\n  </article>`})()}getElement(){return this.element||(this.element=e(this.getTemplate())),this.element}removeElement(){this.element=null}}class r{getTemplate(){return'<button class="load-more" type="button">Загрузить дальше</button>'}getElement(){return this.element||(this.element=e(this.getTemplate())),this.element}removeElement(){this.element=null}}class o{constructor(){this.ended=!1}setParams(e,n,t){this.ended=!0,this.description=e,this.dueDate=n,this.color=t}}const c=()=>{const e=new o;return e.setParams((()=>{const e=["Погулять с собакой","Сделать домашку","Приготовить подарок маме"];return e[((e=0,n=1)=>{const t=Math.ceil(Math.min(e,n)),l=Math.floor(Math.max(e,n));return Math.floor(t+Math.random()*(l-t+1))})(0,e.length-1)]})(),"20.02.10","black"),e},i=document.querySelector(".main"),d=document.querySelector(".control"),_=new class{tasks=Array.from({length:4},c);getTasks=()=>this.tasks;addTask(e){this.tasks.push(e)}},u=new class{taskListComponent=new l;boardComponent=new t;addNewTask(){const e=new o;n(new s(e),this.taskListComponent.getElement())}init=(e,t)=>{this.boardContainer=e,this.tasksModel=t,this.boardTasks=this.tasksModel.getTasks(),n(this.boardComponent,this.boardContainer),n(this.taskListComponent,this.boardComponent.getElement());for(let e=this.boardTasks.length-1;e>=0;e--){const t=this.boardTasks[e].ended?new a(this.boardTasks[e]):new s(this.boardTasks[e]);n(t,this.taskListComponent.getElement()),console.log(this.boardTasks[e])}n(new r,this.boardComponent.getElement())}},m=new class{getTemplate(){return this.element='<button class="control__button">+ ДОБАВИТЬ ЗАДАЧУ</button>','<button class="control__button">+ ДОБАВИТЬ ЗАДАЧУ</button>'}getElement(){return this.element||(this.element=e(this.getTemplate())),this.element}onclick(e){this.element.addEventListener("click",e)}removeElement(){this.element=null}};n(m,d),m.onclick((()=>{u.addNewTask()})),u.init(i,_)})();